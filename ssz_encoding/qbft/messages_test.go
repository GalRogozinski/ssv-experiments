package qbft

import (
	"github.com/stretchr/testify/require"
	"ssv-experiments/ssz_encoding/types"
	"testing"
)

func TestSignedCommitMessage_HashTreeRoot(t *testing.T) {
	id := types.MessageID{0x1, 0x2, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x2, 0x3, 0x0, 0x0, 0x0, 0x0}
	signed := &SignedCommitMessage{
		Message: &BaseMessage{
			ID:     id,
			Height: 1,
			Round:  2,
			Digest: [32]byte{},
		},
		Signature: [96]byte{},
		Signers:   []uint64{1},
	}

	byts, err := signed.MarshalSSZ()
	require.NoError(t, err)
	require.EqualValues(t, id, types.MessageBytes(byts).MsgID())
}
